import { useState } from "react";
import halfbar from "../../assets/svg/halfbar.svg";
import emptybar from "../../assets/images/emptybar.png";
import completebar from "../../assets/svg/completebar.svg";
import { StepOne } from "./signup-steps/StepOne";
import { useForm } from "react-hook-form";
import { Form } from "react-bootstrap";
import { StepThree } from "./signup-steps/StepThree";
import { StepTwo } from "./signup-steps/StepTwo";
import { StepFour } from "./signup-steps/StepFour";
import { StepFive } from "./signup-steps/StepFive";
import { StepSix } from "./signup-steps/StepSix";
import { useNavigate } from "react-router-dom";

export const SignUp = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const navigate = useNavigate();

  const {
    watch,
    register,
    setValue,
    formState: { errors },
  } = useForm();

  const steps = [
    {
      title: "Business Presence",
      description: "Describe your company's operational areas and markets.",
    },
    {
      title: "Company Details",
      description: "Provide the basic information about your company.",
    },
    {
      title: "Company Key Personnel",
      description: "List the key personnel and their roles in the company.",
    },
    {
      title: "Secondary Contact",
      description: "Enter a secondary contact for emergencies or assistance.",
    },
    {
      title: "Business Address",
      description: "Provide the physical address of your business.",
    },
    {
      title: "Banking Details",
      description: "Enter the banking information for financial transactions.",
    },
  ];

  // const handleNext = () => {
  //   if (currentStep < steps.length) setCurrentStep(currentStep + 1);
  // };

  // const handlePrev = () => {
  //   if (currentStep > 1) setCurrentStep(currentStep - 1);
  // };

  const formValues = watch();

  return (
    <section
      style={{ background: "#FFFEFD" }}
      className="row container mx-auto p-4"
    >
      <div
        style={{
          background: "#FFF9F1",
        }}
        className="pt-5 col-3 rounded-4 d-flex flex-column justify-content-center align-items-center"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="106"
          height="60"
          viewBox="0 0 106 60"
          fill="none"
          onClick={() => navigate("/")}
          style={{ cursor: "pointer" }}
        >
          <path
            d="M18.4607 0.00660237V0.016226C17.7672 0.0231401 16.7355 0.0643207 15.8379 0.223647C12.25 0.847726 8.50583 2.80474 5.98168 5.3717C3.58495 7.8109 1.91139 10.931 1.0746 14.5333C0.748428 15.923 0.70586 19.4968 1.00374 21.1276C1.68452 24.9427 3.85439 29.2539 8.1514 35.3095C9.55558 37.2809 18.1496 49.1087 18.4899 49.534L18.8125 49.9284L18.8161 49.9239L19.1537 49.5319C19.5096 49.1071 28.501 37.2959 29.9701 35.3275C34.4661 29.28 36.7391 24.9725 37.4576 21.1583C37.7717 19.5277 37.7353 15.9528 37.3978 14.5618C36.5329 10.9568 34.7938 7.83225 32.299 5.38703C29.671 2.81376 25.7693 0.847727 22.0275 0.21523C20.4451 -0.0577294 18.4607 0.00660237 18.4607 0.00660237Z"
            fill="#DA8003"
          />
          <path
            d="M24.664 10.3587C23.402 10.8265 22.6787 12.0319 22.6787 13.7196C22.6787 15.1803 23.09 16.0455 24.0116 16.5135C25.3449 17.2086 26.8338 16.6837 27.6281 15.2512C28.011 14.5565 28.0537 14.3578 28.0537 13.195C28.0537 12.0319 28.011 11.8618 27.6707 11.3231C27.4438 10.9969 27.1035 10.6422 26.8765 10.5289C26.2666 10.2168 25.2881 10.1317 24.664 10.3587Z"
            fill="#1C4030"
          />
          <path
            d="M19.1905 11.1104C18.4813 11.3657 17.9141 12.2877 17.9141 13.167C17.9141 14.67 18.5523 15.5493 19.7295 15.663C20.3533 15.7195 20.4669 15.6771 20.9208 15.2941C22.0836 14.2588 21.9703 12.0607 20.708 11.2947C20.2682 11.0254 19.63 10.9544 19.1905 11.1104Z"
            fill="#1C4030"
          />
          <path
            d="M14.2835 13.0535C13.8719 13.4647 13.8013 13.6349 13.8013 14.188C13.8013 15.8898 15.1342 17.0953 16.3397 16.4856C16.9069 16.1877 17.2048 15.5919 17.2048 14.7694C17.2048 13.5639 16.3679 12.5713 15.3329 12.5713C14.879 12.5713 14.6661 12.6705 14.2835 13.0535Z"
            fill="#1C4030"
          />
          <path
            d="M11.7441 15.2374C10.312 15.7054 10.0991 17.7193 11.4179 18.5276C12.1412 18.9674 12.6093 18.8965 13.2475 18.2583C13.7155 17.7902 13.8006 17.6201 13.8006 17.0952C13.8006 16.3012 13.3752 15.5921 12.737 15.3224C12.2122 15.1099 12.1698 15.1099 11.7441 15.2374Z"
            fill="#1C4030"
          />
          <path
            d="M18.254 17.8895C15.2331 18.5418 12.6662 20.5274 11.3191 23.2359C9.80161 26.3278 9.98588 28.8094 12.0424 32.7095C13.0492 34.5956 13.8716 35.7728 15.1339 37.0775C16.3111 38.3112 16.9494 38.7083 18.1831 39.0345C19.7571 39.4316 21.3597 38.9494 22.4091 37.7581C23.4162 36.6094 23.6573 35.1914 23.2175 33.0498C23.0615 32.3407 23.005 31.5323 23.0474 30.7949C23.1324 29.4052 23.4303 28.7387 24.8342 27.0084C26.5077 24.9377 27.0891 23.3919 26.8198 21.6902C26.5219 19.7897 24.9337 18.329 22.622 17.8326C21.6293 17.6201 19.3317 17.6484 18.254 17.8895Z"
            fill="#1C4030"
          />
          <path
            d="M8.85227 18.6127C8.49755 19.0666 8.48342 19.3928 8.7672 19.946C9.16431 20.7257 10.0292 20.8959 10.6109 20.3004C11.1072 19.8182 11.0786 19.1941 10.5541 18.6551C10.0009 18.1023 9.26352 18.0878 8.85227 18.6127Z"
            fill="#1C4030"
          />
          <mask
            id="mask0_1495_23091"
            maskUnits="userSpaceOnUse"
            x="81"
            y="3"
            width="21"
            height="21"
          >
            <path
              d="M101.797 3.05078H81.5874V23.2599H101.797V3.05078Z"
              fill="white"
            />
          </mask>
          <g mask="url(#mask0_1495_23091)">
            <path
              d="M101.226 3.62217C100.453 2.84988 99.1971 2.86281 98.4407 3.65073L93.8563 7.31704C93.7854 7.37356 93.6913 7.3922 93.6041 7.36694L84.3562 4.66771C84.2585 4.63915 84.153 4.66621 84.0812 4.73806L82.3265 6.49275C82.199 6.62021 82.224 6.83305 82.3773 6.92714L90.2041 11.7463C90.3553 11.8395 90.3821 12.0484 90.2588 12.1768L86.3385 16.2619C86.2751 16.328 86.1828 16.3587 86.0923 16.3439L83.6456 15.9423C83.5569 15.9276 83.4667 15.9568 83.4033 16.0202L81.9011 17.5224C81.7559 17.6676 81.8121 17.9147 82.006 17.9826L85.4781 19.1986C85.5584 19.2269 85.6212 19.2897 85.6492 19.3696L86.8655 22.8418C86.9331 23.0357 87.1802 23.0922 87.3254 22.9467L88.8276 21.4445C88.8913 21.3811 88.9202 21.2909 88.9058 21.2025L88.5041 18.7555C88.4891 18.665 88.5198 18.573 88.5862 18.5093L92.6713 14.5889C92.7994 14.466 93.0086 14.4928 93.1018 14.644L97.9206 22.4705C98.015 22.6238 98.2279 22.6488 98.355 22.5216L100.109 20.7681C100.181 20.6954 100.208 20.5886 100.178 20.4903L97.3453 11.1111C97.3176 11.02 97.3384 10.9214 97.4003 10.8493L101.197 6.40707C101.985 5.65072 101.998 4.39475 101.226 3.62217Z"
              fill="#DA7F03"
            />
          </g>
          <path
            d="M42.9243 10.9041V19.6968H44.6261H46.3279V13.2158C46.3279 9.6562 46.3703 6.79132 46.413 6.83401C46.4698 6.89053 46.6823 7.58555 46.8952 8.37978C47.1077 9.18814 47.831 11.7265 48.4977 14.0241C49.1501 16.3215 49.7883 18.5481 49.8875 18.9594L50.0718 19.7112L51.632 19.6685L53.206 19.6258L53.8725 17.5696C54.8937 14.3503 56.6381 8.635 56.8365 7.8549C56.9216 7.45779 57.0494 7.10336 57.0918 7.04655C57.1486 6.9756 57.1627 9.81222 57.1344 13.315L57.0776 19.6968H58.9354H60.7932V12.6344C60.7932 8.7342 60.7509 4.7775 60.694 3.84168L60.609 2.11133H58.042H55.4609L53.9575 7.10336C53.1209 9.8546 52.3267 12.5493 52.1992 13.1025C51.9723 14.0524 51.717 14.6055 51.717 14.166C51.717 13.9108 50.0435 8.1955 48.6538 3.69979L48.1571 2.11133H45.5337H42.9243V10.9041Z"
            fill="#1D4030"
          />
          <path
            d="M62.4099 6.8903C62.6224 7.48612 64.2394 11.6839 64.5512 12.4637C66.0404 16.2079 67.033 18.9733 67.033 19.4413C67.0189 21.0439 65.4731 22.2635 63.7714 22.0365L63.1046 21.9515L63.0054 22.6179C62.963 22.9868 62.9203 23.6533 62.9203 24.1072C62.9203 24.8873 62.9489 24.9438 63.2892 25.0289C63.8847 25.1849 66.3383 24.9865 67.033 24.7454C67.955 24.4192 69.0045 23.5682 69.6141 22.6748C70.2806 21.6962 70.9188 20.0654 72.5355 15.3003C73.2447 13.2297 74.209 10.3934 74.6771 9.00333C75.1593 7.59945 75.5423 6.43667 75.5423 6.40811C75.5423 6.37985 74.6912 6.36572 73.6559 6.36572H71.7557L70.6071 10.0813C69.9689 12.1376 69.373 14.1514 69.2738 14.5485C69.1888 14.9597 69.061 15.3003 69.0186 15.3003C68.9618 15.3003 68.8767 15.0448 68.8199 14.7331C68.7348 14.2082 66.3948 6.74841 66.2388 6.47906C66.1964 6.42224 65.2744 6.36572 64.1967 6.36572H62.2256L62.4099 6.8903Z"
            fill="#1D4030"
          />
          <path
            d="M101.637 30.0352V39.1117L103.353 39.1544C104.289 39.1827 105.083 39.1685 105.112 39.1544C105.14 39.1259 105.169 35.0131 105.183 30.0352L105.197 20.9731H103.41H101.637V30.0352Z"
            fill="#DA7F02"
          />
          <path
            d="M39.8042 23.526V25.0859H42.0023H44.2004V32.0918V39.1118L46.0582 39.1545C47.0794 39.1827 47.9446 39.1686 47.9728 39.1403C48.0011 39.1118 48.0297 35.9352 48.0297 32.0776V25.0859H50.2278H52.4259V23.526V21.9658H46.115H39.8042V23.526Z"
            fill="#DA7F02"
          />
          <path
            d="M58.9638 25.9368C58.0986 26.1211 57.2334 26.6742 56.5102 27.5108L55.8723 28.2482L55.7018 27.1564L55.5317 26.0784H54.1137H52.7095V32.6021V39.1257H54.4681H56.2408L56.2835 35.1122L56.3259 31.0846L56.7089 30.5173C57.2479 29.7089 57.8716 29.4537 59.446 29.4255L60.7507 29.4113L60.8357 27.7802C60.8784 26.8868 60.864 26.107 60.8075 26.036C60.6373 25.8659 59.6303 25.809 58.9638 25.9368Z"
            fill="#DA7F02"
          />
          <path
            d="M66.6076 25.9512C65.4872 26.0222 63.7286 26.5044 62.8352 26.9724L62.509 27.1426L63.0053 28.192C63.2747 28.7734 63.5302 29.2839 63.5585 29.3124C63.6008 29.3548 63.8988 29.2839 64.2249 29.1564C65.8702 28.5465 67.572 28.3339 68.3662 28.6315C69.0751 28.9012 69.302 29.2697 69.302 30.1632V31.0001L67.4301 31.0852C63.9697 31.2553 62.5231 31.9076 61.7006 33.6662C61.4454 34.2194 61.3604 34.6162 61.3604 35.4531C61.3604 37.8923 62.9202 39.4098 65.4445 39.4098C66.3524 39.4098 67.6429 39.0695 68.2385 38.6583C68.4795 38.5023 68.919 38.1334 69.2311 37.8355L69.7983 37.2827L70.068 38.2044L70.3232 39.126H71.5996H72.8761L72.8192 34.1199C72.7765 29.9079 72.72 29.0286 72.5213 28.5182C71.7557 26.5468 69.8693 25.7243 66.6076 25.9512ZM69.302 33.9497C69.302 35.1128 69.0609 35.7083 68.3662 36.2332C67.9264 36.5735 67.6853 36.6445 66.806 36.6868C65.7992 36.7437 65.7424 36.7295 65.3312 36.3183C64.9768 35.9494 64.9058 35.7793 64.9058 35.1838C64.9058 33.9497 65.7707 33.3683 67.884 33.1699C68.5505 33.1131 69.1319 33.0563 69.2028 33.0422C69.2596 33.0422 69.302 33.4393 69.302 33.9497Z"
            fill="#DA7F02"
          />
          <path
            d="M92.2055 25.9512C90.4755 26.2064 88.8729 27.3695 88.1211 28.9153C87.4687 30.2768 87.2703 31.3262 87.3413 33.3115C87.3978 34.9568 87.4263 35.1552 87.8658 36.0913C89.0004 38.5591 91.2411 39.5941 94.9002 39.353C96.1622 39.2679 98.1619 38.8284 98.3889 38.5873C98.4457 38.5305 98.5164 37.7931 98.5732 36.9565L98.6724 35.4248L97.935 35.7934C95.8078 36.8855 92.8296 36.9989 91.6951 36.0486C91.1419 35.5808 90.915 35.1128 90.7875 34.1908L90.688 33.4534H94.9426H99.1973L99.2541 32.56C99.3674 30.5461 98.63 28.3053 97.5096 27.2844C96.7436 26.6035 95.6235 26.0931 94.5031 25.9229C93.4961 25.7811 93.3686 25.7811 92.2055 25.9512ZM94.8717 28.7451C95.3824 29.0427 95.8929 29.8655 96.0203 30.6453L96.1198 31.1843H93.4819H90.8582V30.7872C90.8726 30.2909 91.298 29.3407 91.681 29.0145C92.4466 28.3339 93.95 28.2061 94.8717 28.7451Z"
            fill="#DA7F02"
          />
          <path
            d="M73.9109 27.2417C74.4496 28.5463 76.8606 34.843 77.825 37.4668L78.449 39.1401L80.3495 39.0977L82.2497 39.055L83.1576 36.6443C83.6539 35.3111 84.1502 33.9779 84.2635 33.6661C84.5897 32.7583 86.7596 26.8728 86.9865 26.2773C87.0575 26.1071 86.7737 26.0786 85.1714 26.1071L83.285 26.1495L83.1149 26.7168C83.0157 27.0288 82.4057 29.0427 81.7393 31.1842C81.0728 33.3255 80.5055 35.1978 80.477 35.3394C80.4205 35.68 80.1794 35.5946 80.1367 35.2119C80.1226 35.0559 79.5836 33.2973 78.9453 31.3117C78.3071 29.3264 77.6689 27.355 77.5415 26.9296L77.2862 26.1495L75.3716 26.1071L73.4429 26.0645L73.9109 27.2417Z"
            fill="#DA7F02"
          />
          <path
            d="M71.4292 50.2585V59.2782L73.1734 59.2358L74.9037 59.1931L74.9461 57.1793L74.9888 55.1654L75.698 54.5699C76.0806 54.2438 76.4212 54.0027 76.4354 54.0309C76.4495 54.0592 76.5914 54.272 76.7615 54.5131C76.9176 54.7401 77.6126 55.761 78.3073 56.7822C80.1651 59.5193 79.7965 59.2782 82.0229 59.2358C83.0582 59.2214 83.9093 59.179 83.9093 59.1222C83.8949 59.0798 82.7889 57.4204 81.4274 55.4348C80.0659 53.4495 78.9596 51.776 78.9882 51.7192C79.0023 51.6627 80.151 50.4004 81.5407 48.9256L84.0653 46.2167H81.952H79.8389L78.4065 47.8052C76.9034 49.4928 75.5134 51.1378 75.0456 51.7901L74.7618 52.1731L74.8045 46.8122L74.8469 41.4375L73.8825 41.3524C73.358 41.2956 72.5779 41.2529 72.1807 41.2529H71.4292V50.2585Z"
            fill="#1D3F30"
          />
          <path
            d="M86.0936 41.395C85.4978 41.6361 85.186 42.2175 85.186 43.1251C85.186 43.9052 85.2284 44.0185 85.6679 44.4583C86.0936 44.8837 86.2355 44.9405 86.9161 44.9405C87.37 44.9405 87.7954 44.8554 87.9938 44.7135C89.0291 43.9903 88.9582 42.0188 87.8805 41.466C87.4407 41.239 86.5758 41.1963 86.0936 41.395Z"
            fill="#1D3F30"
          />
          <path
            d="M49.8019 45.7916C48.3127 47.7486 47.0507 49.4648 46.9798 49.6208C46.9088 49.7768 46.8096 49.9043 46.7669 49.9043C46.7245 49.9043 46.696 48.2166 46.7245 46.146L46.7669 42.388H44.9091H43.0654V50.8263V59.2643H44.9091H46.7528L46.7669 56.2437L46.781 53.2369L47.3059 52.7833C47.5894 52.5422 47.9156 52.3152 48.0006 52.287C48.1143 52.2584 49.0787 53.7191 50.2841 55.7188L52.383 59.1933L54.3827 59.236C55.4887 59.2501 56.3966 59.236 56.3966 59.1933C56.3966 59.1509 55.1625 57.123 53.6594 54.6835C52.1419 52.2443 50.8655 50.1736 50.8087 50.0744C50.6812 49.876 50.9082 49.564 53.8437 45.7916C54.9073 44.4301 55.9568 43.0686 56.1696 42.771L56.5667 42.2461H54.5243H52.4822L49.8019 45.7916Z"
            fill="#1D3F30"
          />
          <path
            d="M61.3034 46.1605C60.4526 46.3162 58.5239 47.0822 58.5239 47.2523C58.5239 47.3233 58.694 47.7486 59.2189 48.94L59.5024 49.6064L60.3249 49.2803C62.1544 48.5429 63.984 48.4719 64.7214 49.1101C65.0334 49.3795 65.1044 49.5782 65.1609 50.3015L65.2177 51.1808H63.757C60.1833 51.1949 58.382 51.9323 57.5736 53.705C57.4176 54.0739 57.3325 54.6126 57.3325 55.506C57.3325 56.9953 57.5877 57.6194 58.4956 58.4418C59.3464 59.2075 60.1123 59.4486 61.6013 59.3921C62.6793 59.3494 62.991 59.2643 63.8138 58.8672C64.3525 58.5979 64.9342 58.1866 65.1609 57.9028C65.5865 57.3641 65.7567 57.2932 65.7567 57.6759C65.7567 57.8178 65.8559 58.2431 65.9837 58.612L66.2103 59.2785L67.4444 59.2361L68.6639 59.1934L68.6213 54.3715C68.5647 48.94 68.4938 48.4154 67.6569 47.4934C66.948 46.7133 65.9268 46.2597 64.4803 46.0751C62.991 45.905 62.5374 45.9049 61.3034 46.1605ZM65.1326 53.9037C65.0899 54.315 65.0475 54.8254 65.0475 55.0383C65.0475 55.8608 63.7143 56.8393 62.6083 56.8534C61.8565 56.8534 61.4029 56.6409 61.0623 56.116C60.5236 55.2367 60.9916 54.0312 62.0552 53.6058C62.4664 53.4216 63.8421 53.2087 64.6787 53.1805L65.2318 53.166L65.1326 53.9037Z"
            fill="#1D3F30"
          />
          <path
            d="M85.186 52.6695V59.1223H86.8878H88.5896V52.6695V46.2168H86.8878H85.186V52.6695Z"
            fill="#1D3F30"
          />
        </svg>
        <div className="step-progress-container h-100 mt-5 px-4">
          <div className="step-bar">
            {/* Step progress visuals using the images */}
            {steps.map((step, index) => (
              <div
                className={`step d-flex align-items-start flex-column  gap-2 mb-3 ${
                  index + 1 <= currentStep ? "active" : ""
                }`}
                key={index}
              >
                <div className="d-flex gap-2">
                  <div
                    className={`${
                      index + 1 <= currentStep
                        ? "step-number-active"
                        : "step-number-inactive"
                    }`}
                    onClick={
                      index + 1 <= currentStep
                        ? () => setCurrentStep(index + 1)
                        : undefined
                    }
                  >
                    {index + 1}
                  </div>
                  <div>
                    <div className="text-16-600">{step.title}</div>
                    <div
                      className="text-12-400"
                      style={{
                        color: "#6F6C8F",
                      }}
                    >
                      {step.description}
                    </div>
                  </div>
                </div>
                {index + 1 !== steps.length && (
                  <img
                    src={
                      index + 1 < currentStep
                        ? completebar
                        : index + 1 === currentStep
                        ? halfbar
                        : emptybar
                    }
                    alt={`step-${index + 1}`}
                  />
                )}
              </div>
            ))}
          </div>

          {/* Step details */}

          {/* Navigation buttons */}
        </div>
      </div>
      <div className="col-8 mx-auto mt-5">
        <Form>
          {currentStep === 1 && (
            <StepOne
              register={register}
              errors={errors}
              setValue={setValue}
              setCurrentStep={setCurrentStep}
            />
          )}
          {currentStep === 2 && (
            <StepTwo
              register={register}
              errors={errors}
              formValues={formValues}
              setValue={setValue}
              setCurrentStep={setCurrentStep}
            />
          )}
          {currentStep === 3 && (
            <StepThree
              register={register}
              errors={errors}
              formValues={formValues}
              setValue={setValue}
              setCurrentStep={setCurrentStep}
            />
          )}
          {currentStep === 4 && (
            <StepFour
              register={register}
              errors={errors}
              formValues={formValues}
              setValue={setValue}
              setCurrentStep={setCurrentStep}
            />
          )}
          {currentStep === 5 && (
            <StepFive
              register={register}
              errors={errors}
              formValues={formValues}
              setValue={setValue}
              setCurrentStep={setCurrentStep}
            />
          )}
          {currentStep === 6 && (
            <StepSix
              register={register}
              errors={errors}
              formValues={formValues}
              setValue={setValue}
            />
          )}
        </Form>
      </div>
    </section>
  );
};
